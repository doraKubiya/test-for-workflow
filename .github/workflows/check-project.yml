name: Auto Move to Done

on:
  schedule:
    - cron: "*/5 * * * *"   # רץ כל 5 דקות
  workflow_dispatch:        # אפשר גם להריץ ידנית

jobs:
  check-status:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # יוצרים query.json להבאת כל הכרטיסים
      - name: Create query.json
        run: |
          echo '{"query": "query { user(login:\"doraKubiya\") { projectV2(number:2) { items(first:20) { nodes { id content { ... on Issue { number title } } fieldValues(first:10) { nodes { ... on ProjectV2ItemFieldSingleSelectValue { name field { ... on ProjectV2FieldCommon { name } } } } } } } } } }"}' > query.json
          ls -la

      # מביאים את הנתונים מהפרויקט
      - name: Call GraphQL API
        run: |
          curl -H "Authorization: bearer ${{ secrets.PROJECT_TOKEN }}" \
               -X POST \
               -H "Content-Type: application/json" \
               --data-binary @query.json \
               https://api.github.com/graphql > result.json
          cat result.json

      # בודקים אם יש כרטיס ב-In Progress ולוקחים את ה-itemId
      - name: Parse In Progress item
        id: parse
        run: |
          ITEM_ID=$(jq -r '.data.user.projectV2.items.nodes[]
            | select(.fieldValues.nodes[].name?=="In Progress")
            | .id' result.json)

          echo "ITEM_ID=$ITEM_ID"
          echo "ITEM_ID=$ITEM_ID" >> $GITHUB_ENV

      # אם יש כרטיס כזה, מעבירים אותו ל-Done
      - name: Move to Done
        if: env.ITEM_ID != ''
        run: |
          echo "🔄 מעביר את $ITEM_ID ל-Done"
          gh api graphql -f query='
            mutation($project:ID!, $item:ID!, $field:ID!, $option: String!) {
              updateProjectV2ItemFieldValue(input: {
                projectId: $project
                itemId: $item
                fieldId: $field
                value: { singleSelectOptionId: $option }
              }) { clientMutationId }
            }' \
            -F project="PASTE_YOUR_PROJECT_ID_HERE" \
            -F item="$ITEM_ID" \
            -F field="PASTE_YOUR_STATUS_FIELD_ID_HERE" \
            -F option="PASTE_YOUR_DONE_OPTION_ID_HERE"
        env:
          GITHUB_TOKEN: ${{ secrets.PROJECT_TOKEN }}
